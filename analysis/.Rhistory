r = 3
r
2 * 3
a = c(1,2,3,4)
a
length(a)
iris
library(caret)
iris
head(iris)
table(iris$Species)
trainIndex <- createDataPartition(iris$Species, p = .8,
list = FALSE)
trainIndex
nrow(trainIndex)
trainIndex
trainIndex
iris$Species
irisTrain <- iris[trainIndex, ]
irisTrain
nrow(irisTrain)
irisTest <- iris[-trainIndex, ]
nrow(irisTest)
fitControl <- trainControl(
method = "cv",
number = 10)
fitControl
head(irisTrain)
model.rf <- train(Species ~ ., data = irisTrain, method = "rf", trControl = fitControl)
model.rf <- train(Species ~ ., data = irisTrain, method = "rf", trControl = fitControl)
install.packages("e1071")
model.rf <- train(Species ~ ., data = irisTrain, method = "rf", trControl = fitControl)
model.rf
model.rf
summary(model.rf)
model.rf
model.rf <- train(Species ~ ., data = irisTrain, method = "gbm", trControl = fitControl)
model.rf
model.gbm <- train(Species ~ ., data = irisTrain, method = "gbm", trControl = fitControl)
model.rf <- train(Species ~ ., data = irisTrain, method = "rf", trControl = fitControl)
model.rf
predict(model.gbm, irisTest)
colnames(irisTrain)
pred <- predict(model.gbm, irisTest)
table(irisTest$Species, pred)
rf.pred <- predict(model.rf, irisTest)
rf.pred <- predict(model.rf, irisTest)
table(irisTest$Species, rf.pred)
rf.pred <- predict(model.rf, irisTest)
table(irisTest$Species, rf.pred)
pred <- predict(model.gbm, irisTest)
table(irisTest$Species, pred)
model.gbm
model.logit <- train(Species ~ ., data = irisTrain, method = "plr", trControl = fitControl)
model.logit <- train(Species ~ ., data = irisTrain, method = "plr", trControl = fitControl)
logit.pred <- predict(model.logit, irisTest)
logit.pred
table(irisTest$Species, logit.pred)
table(irisTest$Species, logit.pred)
logit.pred
model.logit
model.svmRadial <- train(Species ~ ., data = irisTrain, method = "svmRadial", trControl = fitControl)
svmRadial.pred <- predict(model.logit, model.svmRadial)
svmRadial.pred <- predict(model.svmRadial, model.svmRadial)
model.svmRadial <- train(Species ~ ., data = irisTrain, method = "svmRadial", trControl = fitControl)
svmRadial.pred <- predict(model.svmRadial, irisTest)
svmRadial.pred
model.svmRadial
model.pred <- predict(svmRadial.pred, irisTest)
setwd("~/Dropbox/udacity_challenge2_v2/analysis")
library(data.table)
library(dplyr)
library(ggplot2)
data2 <- fread("interpolated-2.csv")
data2$file <- 'data2'
data3 <- fread("interpolated-3.csv")
data3$file <- 'data3'
data4 <- fread("interpolated-4.csv")
data4$file <- 'data4'
data5 <- fread("interpolated-5.csv")
data5$file <- 'data5'
data6 <- fread("interpolated-6.csv")
data6$file <- 'data6'
data <- rbind(data2, data3, data4, data5, data6)
data.center <- filter(data, frame_id == 'center_camera')
head(data.center)
filter(data.center, speed !=0, -2 < angle, angle < 2) %>% nrow()
filter(data.center, speed !=0, -2 < angle, angle < 2) %>% summary
filter(data.center, speed !=0, -2 < angle, angle < 2) %>%
ggplot(aes(x = angle)) + geom_histogram()
filter(data.center, speed !=0, -2 < angle, angle < 2) %>%
ggplot(aes(x = angle)) + geom_histogram(bins = 100)
filter(data.center, speed !=0, -2 < angle, angle < 2) %>%
ggplot(aes(x = angle)) + geom_histogram(bins = 500)
tmp <- filter(data.center, speed !=0, -2 < angle, angle < 2) %>% select(angle)
sqrt(mean(tmp ^ 2))
sqrt(mean(( tmp - mean(tmp) ) ^ 2))
mean(tmp)
tmp <- filter(data.center, speed !=0, -2 < angle, angle < 2) %>% select(angle)
sqrt(mean(( tmp - mean(tmp) ) ^ 2))
tmp
mean(tmp)
head(tmp)
tmp <- filter(data.center, speed !=0, -2 < angle, angle < 2) %>% select(angle)
sqrt(mean(tmp$angle ^ 2))
sqrt(mean(( tmp$angle - mean(tmp$angle) ) ^ 2))
